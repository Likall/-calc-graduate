<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.ll.gacs.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="pers.ll.gacs.po.Student" >
    <id column="stu_id" property="stuId" jdbcType="VARCHAR" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="stu_rank" property="stuRank" jdbcType="INTEGER" />
    <result column="stu_level" property="stuLevel" jdbcType="VARCHAR" />
    <result column="stu_male" property="stuMale" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, stu_name, stu_rank, stu_level, stu_male, role_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pers.ll.gacs.po.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pers.ll.gacs.po.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.ll.gacs.po.Student" >
    insert into student (stu_id, stu_name, stu_rank, 
      stu_level, stu_male, role_id
      )
    values (#{stuId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, #{stuRank,jdbcType=INTEGER}, 
      #{stuLevel,jdbcType=VARCHAR}, #{stuMale,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pers.ll.gacs.po.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="stuRank != null" >
        stu_rank,
      </if>
      <if test="stuLevel != null" >
        stu_level,
      </if>
      <if test="stuMale != null" >
        stu_male,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuRank != null" >
        #{stuRank,jdbcType=INTEGER},
      </if>
      <if test="stuLevel != null" >
        #{stuLevel,jdbcType=VARCHAR},
      </if>
      <if test="stuMale != null" >
        #{stuMale,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.ll.gacs.po.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuRank != null" >
        stu_rank = #{record.stuRank,jdbcType=INTEGER},
      </if>
      <if test="record.stuLevel != null" >
        stu_level = #{record.stuLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.stuMale != null" >
        stu_male = #{record.stuMale,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set stu_id = #{record.stuId,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_rank = #{record.stuRank,jdbcType=INTEGER},
      stu_level = #{record.stuLevel,jdbcType=VARCHAR},
      stu_male = #{record.stuMale,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.ll.gacs.po.Student" >
    update student
    <set >
      <if test="stuName != null" >
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuRank != null" >
        stu_rank = #{stuRank,jdbcType=INTEGER},
      </if>
      <if test="stuLevel != null" >
        stu_level = #{stuLevel,jdbcType=VARCHAR},
      </if>
      <if test="stuMale != null" >
        stu_male = #{stuMale,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.ll.gacs.po.Student" >
    update student
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_rank = #{stuRank,jdbcType=INTEGER},
      stu_level = #{stuLevel,jdbcType=VARCHAR},
      stu_male = #{stuMale,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.ll.gacs.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="pers.ll.gacs.po.Course" >
    <id column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_credit" property="courseCredit" jdbcType="VARCHAR" />
    <result column="course_term" property="courseTerm" jdbcType="VARCHAR" />
    <result column="course_average" property="courseAverage" jdbcType="DOUBLE" />
    <result column="course_total_grade" property="courseTotalGrade" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, course_name, course_credit, course_term, course_average, course_total_grade
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pers.ll.gacs.po.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pers.ll.gacs.po.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.ll.gacs.po.Course" >
    insert into course (course_id, course_name, course_credit, 
      course_term, course_average, course_total_grade
      )
    values (#{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{courseCredit,jdbcType=VARCHAR}, 
      #{courseTerm,jdbcType=VARCHAR}, #{courseAverage,jdbcType=DOUBLE}, #{courseTotalGrade,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pers.ll.gacs.po.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="courseCredit != null" >
        course_credit,
      </if>
      <if test="courseTerm != null" >
        course_term,
      </if>
      <if test="courseAverage != null" >
        course_average,
      </if>
      <if test="courseTotalGrade != null" >
        course_total_grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null" >
        #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="courseTerm != null" >
        #{courseTerm,jdbcType=VARCHAR},
      </if>
      <if test="courseAverage != null" >
        #{courseAverage,jdbcType=DOUBLE},
      </if>
      <if test="courseTotalGrade != null" >
        #{courseTotalGrade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.ll.gacs.po.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseCredit != null" >
        course_credit = #{record.courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTerm != null" >
        course_term = #{record.courseTerm,jdbcType=VARCHAR},
      </if>
      <if test="record.courseAverage != null" >
        course_average = #{record.courseAverage,jdbcType=DOUBLE},
      </if>
      <if test="record.courseTotalGrade != null" >
        course_total_grade = #{record.courseTotalGrade,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set course_id = #{record.courseId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_credit = #{record.courseCredit,jdbcType=VARCHAR},
      course_term = #{record.courseTerm,jdbcType=VARCHAR},
      course_average = #{record.courseAverage,jdbcType=DOUBLE},
      course_total_grade = #{record.courseTotalGrade,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.ll.gacs.po.Course" >
    update course
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null" >
        course_credit = #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="courseTerm != null" >
        course_term = #{courseTerm,jdbcType=VARCHAR},
      </if>
      <if test="courseAverage != null" >
        course_average = #{courseAverage,jdbcType=DOUBLE},
      </if>
      <if test="courseTotalGrade != null" >
        course_total_grade = #{courseTotalGrade,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.ll.gacs.po.Course" >
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_credit = #{courseCredit,jdbcType=VARCHAR},
      course_term = #{courseTerm,jdbcType=VARCHAR},
      course_average = #{courseAverage,jdbcType=DOUBLE},
      course_total_grade = #{courseTotalGrade,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
</mapper>